scalar Date

enum CardState {
  NEW
  LEARNING
  RELEARNING
  GRADUATED
}

type Card {
  front: String
  back: String
  state: CardState
  easeFactor: Int
  currentInterval: Int
  dueDate: Date
  currentStep: Int
}

type Deck {
  _id: String
  name: String
  createdAt: Date
  userId: String
  intervalModifier: Int
  cards: Int
  newCards: Int
  learningCars: Int
  relearningCards: Int
  graduatedCards: Int
}

extend type Query {
  decks: [Deck]
}

extend type Mutation {
  createDeck(name: String!): Deck
  deleteDeck(deckId: String!): Boolean
  addCard(deckId: String!, front: String!, back: String!): Deck
}
